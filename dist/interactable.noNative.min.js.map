{"version":3,"file":"interactable.noNative.min.js","sources":["../playground/src/react-interactable/Utils.js","../playground/src/react-interactable/Behaviors.js","../playground/src/react-interactable/InteractableView.js","../playground/src/react-interactable/Animator.js","../playground/src/react-interactable/noNative.js","../playground/src/react-interactable/AnimatedView.js"],"sourcesContent":["export default {\r\n\tcreateArea: function( boundaries ){\r\n\t\treturn {\r\n\t\t\tminPoint: {\r\n\t\t\t\tx: boundaries.left === undefined ? -Infinity : boundaries.left,\r\n\t\t\t\ty: boundaries.top === undefined ? -Infinity : boundaries.top\r\n\t\t\t},\r\n\t\t\tmaxPoint: {\r\n\t\t\t\tx: boundaries.right === undefined ? Infinity : boundaries.right,\r\n\t\t\t\ty: boundaries.bottom === undefined ? Infinity : boundaries.bottom\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tcreateAreaFromRadius: function( radius, anchor ){\r\n\t\treturn {\r\n\t\t\tminPoint: {x: anchor.x - radius, y: anchor.y - radius},\r\n\t\t\tmaxPoint: {x: anchor.x + radius, y: anchor.y + radius}\r\n\t\t}\r\n\t},\r\n\tisPointInArea: function( {x, y}, area ){\r\n\t\tif( !area ) return true\r\n\r\n\t\tlet { minPoint, maxPoint } = area\r\n\r\n\t\treturn x>=minPoint.x && x <= maxPoint.x && y >= minPoint.y && y <= maxPoint.y\r\n\t},\r\n\tfindClosest: function( origin, points ){\r\n\t\tlet minDistance = Infinity;\r\n\t\tlet closestPoint = null;\r\n\t\tlet distances = []\r\n\t\tpoints.forEach( point => {\r\n\t\t\tlet distance = this.getDistance( point, origin );\r\n\t\t\tdistances.push( distance )\r\n\t\t\tif (distance < minDistance) {\r\n\t\t\t\tminDistance = distance;\r\n\t\t\t\tclosestPoint = point;\r\n\t\t\t}\r\n\t\t})\r\n\t\t// console.log( distances )\r\n\t\treturn closestPoint\r\n\t},\r\n\tgetDistance( point, relative ){\r\n\t\tlet p = {x: point.x === undefined ? Infinity : point.x, y: point.y === undefined ? Infinity : point.y }\r\n\t\tlet r = {x: relative.x === undefined ? Infinity : relative.x, y: relative.y === undefined ? Infinity : relative.y }\r\n\t\tif( p.x === Infinity && p.y === Infinity ) return Infinity\r\n\t\tlet dx = p.x === Infinity ? 0 : Math.abs(r.x - p.x)\r\n\t\tlet dy = p.y === Infinity ? 0 : Math.abs(r.y - p.y)\r\n\t\t\r\n\t\treturn Math.sqrt( dx*dx + dy*dy )\r\n\t},\r\n\tgetDelta( point, origin ){\r\n\t\treturn {\r\n\t\t\tx: point.x - origin.x,\r\n\t\t\ty: point.y - origin.y\r\n\t\t}\r\n\t}\r\n}","import Utils from './Utils'\r\n\r\nfunction def( value, defaultValue ){\r\n\treturn value === undefined ? defaultValue : value\r\n}\r\n\r\nexport default {\r\n\tanchor: {\r\n\t\tcreate: (options, isTemp = false) => (\r\n\t\t\t{ x0: options.x, y0: options.y, priority: 1, isTemp, type: 'anchor' }\r\n\t\t),\r\n\t\tdoFrame: (options, deltaTime, state, coords ) => {\r\n\t\t\t// Velocity = dx / deltaTime\r\n\t\t\tstate.vx = (options.x0 - coords.x) / deltaTime\r\n\t\t\tstate.vy = (options.y0 - coords.y) / deltaTime\r\n\t\t}\r\n\t},\r\n\r\n\tbounce: {\r\n\t\tcreate: (options, isTemp = false) => ({\r\n\t\t\ttype: 'bounce',\r\n\t\t\tbounce: def(options.bounce, .5),\r\n\t\t\tminPoint: options.influence.minPoint,\r\n\t\t\tmaxPoint: options.influence.maxPoint,\r\n\t\t\tpriority: 3,\r\n\t\t\tisTemp\r\n\t\t}),\r\n\t\tdoFrame: ({minPoint, maxPoint, bounce}, deltaTime, state, {x,y}, target ) => {\r\n\t\t\t// Apply limits\r\n\t\t\tif (minPoint.x > x) target.setTranslationX(minPoint.x);\r\n\t\t\tif (minPoint.y > y) target.setTranslationY(minPoint.y);\r\n\t\t\tif (maxPoint.x < x) target.setTranslationX(maxPoint.x);\r\n\t\t\tif (maxPoint.y < y) target.setTranslationY(maxPoint.y);\r\n\r\n\t\t\tlet { vx, vy } = state\r\n\r\n\t\t\tif (minPoint.x > x && vx < 0) {\r\n\t\t\t\tstate.vx = -vx * bounce\r\n\t\t\t}\r\n\t\t\tif (minPoint.y > y && vy < 0) {\r\n\t\t\t\tstate.vy= -vy * bounce\r\n\t\t\t}\r\n\t\t\tif (maxPoint.x < x && vx > 0) {\r\n\t\t\t\tstate.vx = -vx * bounce\r\n\t\t\t}\r\n\t\t\tif (maxPoint.y < y && vy > 0) {\r\n\t\t\t\tstate.vy = -vy * bounce\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tfriction: {\r\n\t\tcreate: ( options, isTemp = false ) => ({\r\n\t\t\ttype: 'friction',\r\n\t\t\tdamping: def(options.damping, .7),\r\n\t\t\tinfluence: Utils.createArea( options.influenceArea || {} ),\r\n\t\t\tpriority: 2,\r\n\t\t\tisTemp\r\n\t\t}),\r\n\t\tdoFrame: (options, deltaTime, state, coords) => {\r\n\t\t\tif( !Utils.isPointInArea( coords, options.influence) ) return;\r\n\t\t\t\r\n\t\t\tlet pow = Math.pow(options.damping, 60.0 * deltaTime)\r\n\t\t\tstate.vx = pow * state.vx\r\n\t\t\tstate.vy = pow * state.vy\r\n\t\t}\r\n\t},\r\n\r\n\tgravity: {\r\n\t\tcreate: ( options, isTemp = false ) => ({\r\n\t\t\ttype: 'gravity',\r\n\t\t\tx0: def(options.x, Infinity),\r\n\t\t\ty0: def(options.y, Infinity),\r\n\t\t\tstrength: def(options.strength, 400),\r\n\t\t\tfalloff: def(options.falloff, 40),\r\n\t\t\tdamping: def(options.damping, 0),\r\n\t\t\tinfluence: Utils.createArea(options.influenceArea || {}),\r\n\t\t\tisTemp,\r\n\t\t\tpriority: 1\r\n\t\t}),\r\n\t\tdoFrame: (options, deltaTime, state, coords) => {\r\n\t\t\tif( !Utils.isPointInArea( coords, options.influence) ) return;\r\n\r\n\t\t\tlet dx = options.x0 !== Infinity ? coords.x - options.x0 : 0;\r\n\t\t\tlet dy = options.y0 !== Infinity ? coords.y - options.y0 : 0;\r\n\t\t\tlet dr = Math.sqrt(dx * dx + dy * dy);\r\n\r\n\t\t\tif (!dr) return;\r\n\r\n\t\t\tlet { falloff, strength } = options\r\n\t\t\tlet a = (-strength * dr * Math.exp(-0.5 * (dr * dr) / (falloff * falloff))) / state.mass;\r\n\r\n\t\t\tlet ax = dx / dr * a;\r\n\t\t\tlet ay = dy / dr * a;\r\n\r\n\t\t\tstate.vx += deltaTime * ax\r\n\t\t\tstate.vy += deltaTime * ay\r\n\t\t}\r\n\t},\r\n\r\n\tspring: {\r\n\t\tcreate: ( options, isTemp = false ) => ({\r\n\t\t\ttype: 'spring',\r\n\t\t\tx0: def(options.x, 0),\r\n\t\t\ty0: def(options.y, 0),\r\n\t\t\ttension: def(options.tension, 300),\r\n\t\t\tinfluence: Utils.createArea( options.influenceArea || {} ),\r\n\t\t\tisTemp,\r\n\t\t\tpriority: 1\r\n\t\t}),\r\n\t\tdoFrame: ( options, deltaTime, state, coords) => {\r\n\t\t\tif( !Utils.isPointInArea( coords, options.influence) ) return;\r\n\t\r\n\t\t\tlet dx = coords.x - options.x0;\r\n\t\t\tlet ax = (-1 * options.tension * dx) / state.mass;\r\n\t\r\n\t\t\tlet dy = coords.y - options.y0;\r\n\t\t\tlet ay = (-1 * options.tension * dy) / state.mass;\r\n\t\t\t\r\n\t\t\tstate.vx = state.vx + deltaTime * ax\r\n\t\t\tstate.vy = state.vy + deltaTime * ay\r\n\t\t}\r\n\t}\r\n}","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Animator from './Animator'\nimport Utils from './Utils';\n\nconst propBehaviors = {\n\tfrictionAreas: 'friction',\n\tgravityPoints: 'gravity',\n\tspringPoints: 'spring',\n}\n\nexport default function injectDependencies( Animated, PanResponder ){\n\n\treturn class InteractableView extends Component {\n\t\tstatic propTypes = {\n\t\t\tsnapPoints: PropTypes.array,\n\t\t\tfrictionAreas: PropTypes.array,\n\t\t\talertAreas: PropTypes.array,\n\t\t\tgravityPoints: PropTypes.array,\n\t\t\thorizontalOnly: PropTypes.bool,\n\t\t\tverticalOnly: PropTypes.bool,\n\t\t\tdragWithSpring: PropTypes.object,\n\t\t\tdragEnabled: PropTypes.bool,\n\t\t\tanimatedValueX: PropTypes.instanceOf(Animated.Value),\n\t\t\tanimatedValueY: PropTypes.instanceOf(Animated.Value),\n\t\t\tonSnap: PropTypes.func,\n\t\t\tonSnapStart: PropTypes.func,\n\t\t\tonEnd: PropTypes.func,\n\t\t\tonDrag: PropTypes.func,\n\t\t\tboundaries: PropTypes.object,\n\t\t\tinitialPosition: PropTypes.object,\n\t\t\tdragToss: PropTypes.number\n\t\t}\n\n\t\tstatic defaultProps = {\n\t\t\tsnapPoints: [],\n\t\t\tfrictionAreas: [],\n\t\t\talertAreas: [],\n\t\t\tgravityPoints: [],\n\t\t\tboundaries: {},\n\t\t\tinitialPosition: {x: 0, y: 0},\n\t\t\tdragToss: .1,\n\t\t\tdragEnabled: true,\n\t\t\tonSnap: function () { },\n\t\t\tonSnapStart: function () { },\n\t\t\tonStop: function () { },\n\t\t\tonDrag: function () { },\n\t\t\tonAlert: function () { },\n\t\t}\n\n\t\tinitialPositionSet = false\n\t\tisDragging = false\n\n\t\tconstructor(props) {\n\t\t\tsuper(props)\n\n\t\t\tlet { x=0, y=0 } = props.initialPosition\n\n\t\t\t// In case animatedValueXY is not given\n\t\t\tthis.animated = new Animated.ValueXY({x, y})\n\n\t\t\t// This guy will apply all the physics\n\t\t\tthis.animator = this.createAnimator( props )\n\n\t\t\t// Cache when the view is inside of an alert area\n\t\t\tthis.insideAlertAreas = {}\n\n\t\t\t// cache calculated areas\n\t\t\tthis.propAreas = {\n\t\t\t\talert: [],\n\t\t\t\tboundaries: false\n\t\t\t}\n\n\t\t\tthis._pr = this.createPanResponder(props)\n\t\t\t\n\t\t\t// Set behaviors and prop defaults\n\t\t\tthis.setPropBehaviours( {}, props )\n\n\t\t\t// Set initial position\n\t\t\tlet animated  = this.getAnimated( props )\n\t\t\tanimated.x.setValue( x )\n\t\t\tanimated.y.setValue(y)\n\t\t\tanimated.x._startingValue = x\n\t\t\tanimated.y._startingValue = y\n\t\t\t\n\t\t\t// Save the last animation end position to report good coordinates in the events\n\t\t\tthis.lastEnd = {...this.initialPosition}\n\t\t}\n\n\t\trender() {\n\t\t\tlet { x, y } = this.getAnimated()\n\t\n\t\t\tlet position = {\n\t\t\t\ttransform: [\n\t\t\t\t\t{ translateX: x }, { translateY: y }\n\t\t\t\t]\n\t\t\t}\n\n\t\t\tlet panHandlers = this.props.dragEnabled ? this._pr.panHandlers : {}\n\n\t\t\treturn (\n\t\t\t\t<Animated.View style={position} {...panHandlers}>\n\t\t\t\t\t{this.props.children}\n\t\t\t\t</Animated.View>\n\t\t\t)\n\t\t}\n\n\t\tgetTranslation(){\n\t\t\tlet {x, y} = this.getAnimated()\n\t\t\treturn {\n\t\t\t\tx: x._value + x._offset,\n\t\t\t\ty: y._value + y._offset\n\t\t\t}\n\t\t}\n\n\t\tsetTranslationX( tx ){\n\t\t\tlet animated = this.props.animatedValueX || this.animated.x\n\t\t\tanimated.setValue( tx - animated._offset )\n\t\t}\n\n\t\tsetTranslationY(ty) {\n\t\t\tlet animated = this.props.animatedValueY || this.animated.y\n\t\t\tanimated.setValue( ty - animated._offset )\n\t\t}\n\n\t\tsetTranslation( tx, ty ){\n\t\t\tthis.setTranslationX( tx )\n\t\t\tthis.setTranslationY( ty )\n\t\t}\n\n\t\tcreateAnimator(){\n\t\t\treturn new Animator( this, {\n\t\t\t\tonAnimatorPause: () => {\n\t\t\t\t\tlet { x, y } = this.getTranslation()\n\t\t\t\t\tthis.lastEnd = {x: Math.round(x), y: Math.round(y)}\n\t\t\t\t\tthis.props.onStop( this.lastEnd )\n\t\t\t\t},\n\t\t\t\tonAnimationFrame: () => {\n\t\t\t\t\tthis.reportAlertEvent( this.getTranslation() )\n\t\t\t\t}\n\t\t\t},\n\t\t\tfalse // Set true or behavior type to output debug info in the console\n\t\t\t)\n\t\t}\n\n\t\tanimate( dx, dy ){\n\t\t\tif(!dx && !dy) return\n\t\t\t// let animated = this.getAnimated()\n\t\t\t// console.log( dx + animated.x._value + animated.x._offset )\n\n\t\t\tlet {x,y}  = this.getTranslation()\n\t\t\tthis.setTranslation( x + dx, y + dy ) \n\t\t}\n\n\t\tgetAnimated( props ){\n\t\t\tlet { animatedValueX, animatedValueY } = (props || this.props)\n\n\t\t\treturn {\n\t\t\t\tx: animatedValueX || this.animated.x ,\n\t\t\t\ty: animatedValueY || this.animated.y\n\t\t\t}\n\t\t}\n\n\t\tcreatePanResponder() {\n\t\t\treturn PanResponder.create({\n\t\t\t\tonMoveShouldSetResponderCapture: () => true,\n\t\t\t\tonMoveShouldSetPanResponderCapture: () => true,\n\n\t\t\t\tonPanResponderGrant: (e, {x0, y0}) => {\t\n\t\t\t\t\tthis.startDrag( {x: x0, y: y0} )\n\t\t\t\t},\n\n\t\t\t\tonPanResponderMove: (evt, gesture ) => {\n\t\t\t\t\tthis.onDragging( gesture )\n\t\t\t\t},\n\n\t\t\t\tonPanResponderRelease: () => {\n\t\t\t\t\tthis.endDrag()\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\treportAlertEvent( position ){\n\t\t\tlet inside = this.insideAlertAreas\n\t\t\tlet { onAlert } = this.props\n\n\t\t\tthis.propAreas.alert.forEach( ({ influence, id }) => {\n\t\t\t\tif ( !influence || !id ) return;\n\n\t\t\t\tif ( Utils.isPointInArea( position, influence ) ) {\n\t\t\t\t\tif ( !inside[id] ) {\n\t\t\t\t\t\tonAlert({id, value:\"enter\"});\n\t\t\t\t\t\tinside[id] = 1;\n\t\t\t\t\t}\n\t\t\t\t} else if (inside[id]) {\n\t\t\t\t\tonAlert({ id, value: \"leave\" });\n\t\t\t\t\tinside[id] = 0;\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tstartDrag( ev ){\n\t\t\t// Prepare the animated\n\t\t\tlet {x,y} = this.getAnimated()\n\t\t\tlet offset = {x: x._value, y: y._value}\n\t\t\tx.setOffset( offset.x )\n\t\t\ty.setOffset( offset.y )\n\t\t\tx.setValue( 0 )\n\t\t\ty.setValue( 0 )\n\n\t\t\t// Save the offset for triggering events with the right coordinates\n\t\t\tthis.lastEnd = offset\n\t\t\t// console.log( offset )\n\n\t\t\t// Set boundaries to fast access\n\t\t\tthis.dragBoundaries = this.propAreas.boundaries ? this.propAreas.boundaries.influence : {}\n\n\t\t\t// Prepare the animation\n\t\t\tthis.props.onDrag({state: 'start', x: offset.x, y: offset.y})\n\t\t\tthis.dragStartLocation = { x: ev.x, y: ev.y }\n\t\t\tthis.animator.removeTempBehaviors();\n\t\t\tthis.animator.isDragging = true\n\t\t\tthis.animator.vx = 0\n\t\t\tthis.animator.vy = 0\n\t\t\tthis.addTempDragBehavior( this.props.dragWithSpring );\n\n\t\t\t// Stop text selection\n\t\t\tif (document) {\n\t\t\t\tlet styles = document.body.style\n\t\t\t\tthis.userSelectCache = styles.userSelect\n\t\t\t\tstyles.userSelect = \"none\"\n\t\t\t}\n\t\t}\n\n\t\tonDragging({dx, dy}){\n\t\t\tif( !this.animator.isDragging ) return false\n\t\t\tif( !this.props.dragEnabled ) return this.endDrag()\n\n\t\t\tlet pos = this.lastEnd\n\t\t\tlet x = dx + pos.x\n\t\t\tlet y = dy + pos.y\n\t\t\t\n\t\t\t// console.log( this.dragBoundaries.minPoint )\n\n\t\t\tlet {minPoint, maxPoint} = this.dragBoundaries\n\t\t\tif( !this.props.verticalOnly ){\n\t\t\t\tif (minPoint) {\n\t\t\t\t\tif (minPoint.x > x) x = minPoint.x\n\t\t\t\t\tif (maxPoint.x < x) x = maxPoint.x\n\t\t\t\t}\n\t\t\t\tthis.dragBehavior.x0 = x\n\t\t\t}\n\n\t\t\tif (!this.props.horizontalOnly) {\n\t\t\t\tif (minPoint) {\n\t\t\t\t\tif (minPoint.y > y) y = minPoint.y\n\t\t\t\t\tif (maxPoint.y < y) y = maxPoint.y\n\t\t\t\t}\n\t\t\t\tthis.dragBehavior.y0 = y\n\t\t\t}\n\n\t\t\t// console.log( this.dragBehavior )\n\t\t}\n\n\t\tendDrag(){\n\t\t\tthis.animator.removeTempBehaviors();\n\t\t\tthis.dragBehavior = null;\n\t\t\tthis.animator.isDragging = false\n\n\t\t\tlet { animator, horizontalOnly, verticalOnly, dragWithSprings } = this\n\n\t\t\tlet velocity = animator.getVelocity();\n\t\t\tif (horizontalOnly) velocity.y = 0;\n\t\t\tif (verticalOnly) velocity.x = 0;\n\t\t\t\n\t\t\tlet toss = (dragWithSprings && dragWithSprings.toss) || this.props.dragToss;\n\t\t\tlet {x,y} = this.getTranslation()\n\t\t\tlet projectedCenter = {\n\t\t\t\tx: x + toss * velocity.x,\n\t\t\t\ty: y + toss * velocity.y\n\t\t\t};\n\n\t\t\t// console.log( 'pc', projectedCenter, velocity)\n\t\t\tlet snapPoint = Utils.findClosest(projectedCenter, this.props.snapPoints);\n\t\t\tlet targetSnapPointId = (snapPoint && snapPoint.id) || \"\";\n\n\t\t\tthis.props.onDrag({ state: 'end', x: x, y: y, targetSnapPointId })\n\n\t\t\tthis.addTempSnapToPointBehavior(snapPoint);\n\t\t\tthis.addTempBoundaries();\n\n\t\t\tlet animated = this.getAnimated()\n\t\t\tanimated.x.flattenOffset()\n\t\t\tanimated.y.flattenOffset()\n\n\t\t\t// Restore text selection\n\t\t\tif (document) {\n\t\t\t\tdocument.body.userSelect = this.userSelectCache || ''\n\t\t\t}\n\t\t}\n\n\t\taddTempDragBehavior( drag ) {\n\t\t\tlet pos = this.getTranslation()\n\n\t\t\tif ( !drag || drag.tension === Infinity ) {\n\t\t\t\tthis.dragBehavior = this.animator.addBehavior( 'anchor', pos, true )\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpos.tension = drag.tension || 300\n\t\t\t\tthis.dragBehavior = this.animator.addBehavior( 'spring', pos, true )\n\t\t\t\tif( drag.damping ){\n\t\t\t\t\tthis.animator.addBehavior('friction', drag, true)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\taddTempSnapToPointBehavior( snapPoint ) {\n\t\t\tif (!snapPoint)  return;\n\t\t\tlet { snapPoints, onSnap, onSnapStart } = this.props\n\n\t\t\tlet index = snapPoints.indexOf(snapPoint)\n\n\t\t\tonSnap({index, id: snapPoint.id});\n\t\t\tonSnapStart({index, id: snapPoint.id});\n\n\t\t\tlet springOptions = {\n\t\t\t\tdamping: .7,\n\t\t\t\ttension: 300,\n\t\t\t\t...snapPoint\n\t\t\t}\n\n\t\t\tthis.addBehavior( 'spring', springOptions, true )\n\t\t}\n\n\t\tsetVelocity( velocity ) {\n\t\t\tif ( this.dragBehavior ) return;\n\t\t\tthis.animator.physicsObject.vx = velocity.x\n\t\t\tthis.animator.physicsObject.vy = velocity.y\n\t\t\tthis.endDrag();\n\t\t}\n\n\t\tsnapTo( {index} ) {\n\t\t\tlet {snapPoints} = this.props;\n\n\t\t\tif( !snapPoints || index === undefined || index >= snapPoints.length ) return;\n\t\t\t\n\t\t\tthis.animator.removeTempBehaviors();\n\t\t\tthis.dragBehavior = null;\n\t\t\tlet snapPoint = snapPoints[index]\n\n\t\t\tthis.addTempSnapToPointBehavior(snapPoint);\n\t\t\tthis.addTempBoundaries();\n\t\t}\n\n\t\taddTempBoundaries(){\n\t\t\tlet boundaries = this.propAreas.boundaries;\n\t\t\tif( !boundaries ) return;\n\t\t\tthis.animator.addBehavior( 'bounce', boundaries, true );\n\t\t}\n\n\t\tchangePosition( position ) {\n\t\t\tif ( this.dragBehavior ) return;\n\n\t\t\tthis.setTranslation( position.x, position.y )\n\t\t\tthis.endDrag();\n\t\t}\n\n\t\tcomponentDidUpdate( prevProps ){\n\t\t\tthis.setPropBehaviours( prevProps, this.props )\n\t\t}\n\n\t\tsetPropBehaviours( prevProps, props ){\n\t\t\t// spring, gravity, friction\n\t\t\tObject.keys( propBehaviors ).forEach( prop => {\n\t\t\t\tif( prevProps[ prop ] !== props[ prop ] ){\n\t\t\t\t\tthis.animator.removeTypeBehaviors(propBehaviors[prop])\n\t\t\t\t\tthis.addTypeBehaviors( propBehaviors[prop], props[ prop ] )\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif( prevProps.alertAreas !== props.alertAreas ){\n\t\t\t\tlet alertAreas = []\n\t\t\t\tprops.alertAreas.forEach( area => {\n\t\t\t\t\talertAreas.push({\n\t\t\t\t\t\tid: area.id,\n\t\t\t\t\t\tinfluence: Utils.createArea( area.influenceArea )\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t\tthis.propAreas.alert = alertAreas\n\t\t\t}\n\n\t\t\tif( prevProps.boundaries !== props.boundaries ){\n\t\t\t\tthis.animator.removeBehavior( this.oldBoundariesBehavior )\n\t\t\t\tif( props.boundaries ){\n\t\t\t\t\tlet bounce = {\n\t\t\t\t\t\tbounce: props.boundaries.bounce || 0,\n\t\t\t\t\t\tinfluence: Utils.createArea( props.boundaries )\n\t\t\t\t\t}\n\t\t\t\t\tthis.propAreas.boundaries = bounce\n\t\t\t\t\tthis.oldBoundariesBehavior = this.animator.addBehavior( 'bounce', bounce )\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.propAreas.boundaries = false\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (!this.props.dragEnabled && prevProps.dragEnabled && this.dragBehavior ){\n\t\t\t\tthis.endDrag()\n\t\t\t}\n\t\t}\n\n\t\taddTypeBehaviors( type, behaviors, isTemp ){\n\t\t\tbehaviors.forEach( b => this.addBehavior( type, b, isTemp )\t)\n\t\t}\n\n\t\taddBehavior( type, behavior, isTemp ){\n\t\t\tthis.animator.addBehavior( type, behavior, isTemp )\n\t\t\tif( behavior.damping && type !== 'friction' ){\n\t\t\t\tlet b = this.animator.addBehavior('friction', behavior, isTemp )\n\t\t\t\tif( type === 'gravity' && !behavior.influenceArea ){\n\t\t\t\t\tb.influence = Utils.createAreaFromRadius(1.4 * (behavior.falloff || 40), behavior)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import Behaviors from './Behaviors'\r\n\r\nconst ANIMATOR_PAUSE_CONSECUTIVE_FRAMES = 10;\r\nconst ANIMATOR_PAUSE_ZERO_VELOCITY = 1.0;\r\n\r\nclass PhysicsAnimator {\r\n\tbehaviors = []\r\n\tphysicsObject = {vx: 0, vy: 0, mass: 1}\r\n\tconsecutiveFramesWithNoMovement = 0\r\n\tscreenScale = 1\r\n\tlastFrameTS = 0\r\n\tisRunning = false\r\n\tticking = false\r\n\tisDragging = false\r\n\r\n\tconstructor( View, listener, debug ){\r\n\t\tthis.View = View\r\n\t\tthis.animatorListener = listener\r\n\t\tif( !debug ){\r\n\t\t\tlet nofn = function(){}\r\n\t\t\tthis.debugStart = nofn;\r\n\t\t\tthis.debugEnd = nofn;\r\n\t\t}\r\n\t}\r\n\r\n\tdoFrame( frameTimeMillis ) {\r\n\t\tif( !this.isRunning ) return;\r\n\r\n\t\tif ( this.lastFrameTS ) {\r\n\t\t\tthis.animateFrameWithDeltaTime(\r\n\t\t\t\t(frameTimeMillis - this.lastFrameTS) * 1e-3\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tthis.lastFrameTS = frameTimeMillis;\r\n\t\tthis.animatorListener.onAnimationFrame();\r\n\t\trequestAnimationFrame( () => this.doFrame( Date.now() ) )\r\n\t}\r\n\r\n\tdebugStart( behavior ){\r\n\t\tif( this.debug !== true && this.debug !== behavior.type ) return;\r\n\t\tthis.debugB = behavior\r\n\t\tthis.debugInitialV = {...this.physicsObject}\r\n\t}\r\n\r\n\tdebugEnd() {\r\n\t\tif (!this.debugB || (this.debug !== true && this.debug !== this.debugB.type)) return;\r\n\t\tconsole.log( `Debug ${this.debugB.type}`, {\r\n\t\t\tdvx: this.physicsObject.vx - this.debugInitialV.vx,\r\n\t\t\tdvy: this.physicsObject.vy - this.debugInitialV.vy,\r\n\t\t})\r\n\t}\r\n\t\r\n\tanimateFrameWithDeltaTime( deltaTime ) {\r\n\t\tif( !deltaTime ) return;\r\n\r\n\t\tlet { physicsObject, behaviors, View } = this\r\n\t\tlet hadMovement = false\r\n\t\tlet coords = View.getTranslation()\r\n\r\n\t\tbehaviors.forEach( behavior => {\r\n\t\t\tthis.debugStart( behavior )\r\n\t\t\tBehaviors[ behavior.type ].doFrame( behavior, deltaTime, physicsObject, coords, View )\r\n\t\t\tthis.debugEnd()\r\n\t\t})\r\n\r\n\t\tlet dx = 0;\r\n\t\tlet {vx,vy} = physicsObject\r\n\t\t// console.log( physicsObject )\r\n\t\t\r\n\t\tif ( Math.abs(vx) > ANIMATOR_PAUSE_ZERO_VELOCITY ) {\r\n\t\t\tdx = deltaTime * vx;\r\n\t\t\thadMovement = true;\r\n\t\t}\r\n\r\n\t\tlet dy = 0;\r\n\t\tif ( Math.abs(vy) > ANIMATOR_PAUSE_ZERO_VELOCITY ) {\r\n\t\t\tdy = deltaTime * vy;\r\n\t\t\thadMovement = true;\r\n\t\t}\r\n\t\t\r\n\t\t// console.log( {dx, dy} )\r\n\t\tView.animate( dx, dy )\r\n\r\n\t\tlet cfwnm = hadMovement ? 0 : this.consecutiveFramesWithNoMovement + 1\r\n\t\tthis.consecutiveFramesWithNoMovement = cfwnm\r\n\r\n\t\tif (cfwnm >= ANIMATOR_PAUSE_CONSECUTIVE_FRAMES && !this.isDragging ) {\r\n\t\t\tthis.stopRunning();\r\n\t\t\tthis.animatorListener.onAnimatorPause();\r\n\t\t}\r\n\t}\r\n\r\n\taddBehavior( type, options, isTemp ){\r\n\t\tlet b = Behaviors[ type ]\r\n\t\tif( !b ) return;\r\n\r\n\t\tlet behavior = b.create( options, isTemp )\r\n\t\tlet behaviors = this.behaviors\r\n\t\tlet idx = 0\r\n\r\n\t\twhile (behaviors.length > idx && behaviors[idx].priority <= behavior.priority) {\r\n\t\t\t++idx;\r\n\t\t}\r\n\t\tbehaviors.splice( idx, 0, behavior )\r\n\r\n\t\tthis.ensureRunning()\r\n\t\treturn behavior\r\n\t}\r\n\r\n\tremove( condition ){\r\n\t\tlet behaviors = this.behaviors\r\n\t\tlet i = behaviors.length\r\n\t\twhile( i-- > 0 ){\r\n\t\t\tif( condition(behaviors[i]) ){\r\n\t\t\t\tbehaviors.splice( i, 1 )\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tremoveBehavior( behavior ) {\r\n\t\tthis.remove( target => target === behavior )\r\n\t}\r\n\r\n\tremoveTypeBehaviors( type ){\r\n\t\tthis.remove( target => target.type === type )\r\n\t}\r\n\t\r\n\tremoveTempBehaviors(){\r\n\t\tthis.remove( target => target.isTemp )\r\n\t}\r\n\t\r\n\tgetVelocity(){ \r\n\t\treturn { x: this.physicsObject.vx, y: this.physicsObject.vy }\r\n\t}\r\n\r\n\tensureRunning() {\r\n\t\tthis.isRunning || this.startRunning()\r\n\t}\r\n\r\n\tstartRunning() {\r\n\t\tthis.isRunning = true;\r\n\t\tthis.lastFrameTS = 0;\r\n\t\tthis.consecutiveFramesWithNoMovement = 0;\r\n\t\trequestAnimationFrame( () => this.doFrame( Date.now() ) )\r\n\t}\r\n\r\n\tstopRunning() {\r\n\t\tthis.removeTempBehaviors();\r\n\t\tthis.physicsObject = {vx: 0, vy: 0, mass: this.physicsObject.mass}\r\n\t\tthis.isRunning = false;\r\n\t}\r\n}\r\n\r\nexport default PhysicsAnimator","import Animated from 'animated/lib/targets/react-dom'\nimport PanResponder from 'react-panresponder-web'\nimport injectDependencies from './InteractableView'\nimport AnimatedView from './AnimatedView'\n\n// Fake the Animated.View component\nAnimated.View = AnimatedView\n\nlet Interactable = injectDependencies( Animated, PanResponder ) \nexport default {View: Interactable}","import React from 'react'\r\nimport Animated from 'animated/lib/targets/react-dom'\r\n\r\nexport default function AnimatedView(props) {\r\n  let style = props.style ? {...props.style} : {};\r\n  if( !style.display ){\r\n    style.display = 'inline-block'\r\n  }\r\n\r\n  return (\r\n    <Animated.div {...props} style={style}>\r\n      {props.children}\r\n    </Animated.div>\r\n  )\r\n}"],"names":["createArea","boundaries","minPoint","x","undefined","left","Infinity","y","top","maxPoint","right","bottom","createAreaFromRadius","radius","anchor","isPointInArea","area","findClosest","origin","points","minDistance","closestPoint","forEach","point","distance","_this","getDistance","relative","p","r","dx","Math","abs","dy","sqrt","getDelta","def","value","defaultValue","Animated","PanResponder","create","options","isTemp","x0","y0","priority","type","doFrame","deltaTime","state","coords","vx","vy","bounce","influence","target","setTranslationX","setTranslationY","friction","damping","Utils","influenceArea","pow","gravity","strength","falloff","dr","a","exp","mass","ax","ay","spring","tension","PhysicsAnimator","View","listener","debug","animatorListener","nofn","debugStart","debugEnd","frameTimeMillis","this","isRunning","lastFrameTS","animateFrameWithDeltaTime","onAnimationFrame","requestAnimationFrame","Date","now","behavior","debugB","debugInitialV","physicsObject","console","log","dvx","dvy","behaviors","hadMovement","getTranslation","_this2","Behaviors","animate","cfwnm","consecutiveFramesWithNoMovement","isDragging","stopRunning","onAnimatorPause","b","idx","length","splice","ensureRunning","condition","i","remove","startRunning","_this3","removeTempBehaviors","propBehaviors","frictionAreas","gravityPoints","springPoints","props","style","display","React","div","children","initialPosition","animated","ValueXY","animator","createAnimator","insideAlertAreas","propAreas","alert","_pr","createPanResponder","setPropBehaviours","getAnimated","setValue","_startingValue","lastEnd","Component","position","transform","translateX","translateY","panHandlers","dragEnabled","_value","_offset","tx","animatedValueX","ty","animatedValueY","Animator","round","onStop","reportAlertEvent","setTranslation","onMoveShouldSetResponderCapture","onMoveShouldSetPanResponderCapture","onPanResponderGrant","e","startDrag","onPanResponderMove","evt","gesture","onDragging","onPanResponderRelease","endDrag","inside","onAlert","id","ev","offset","setOffset","dragBoundaries","onDrag","dragStartLocation","addTempDragBehavior","dragWithSpring","document","styles","body","userSelectCache","userSelect","pos","verticalOnly","dragBehavior","horizontalOnly","dragWithSprings","velocity","getVelocity","toss","dragToss","projectedCenter","snapPoint","snapPoints","targetSnapPointId","addTempSnapToPointBehavior","addTempBoundaries","flattenOffset","drag","addBehavior","onSnap","onSnapStart","index","indexOf","springOptions","prevProps","Object","keys","prop","_this4","removeTypeBehaviors","addTypeBehaviors","alertAreas","push","removeBehavior","oldBoundariesBehavior","_this5","PropTypes","array","bool","object","instanceOf","Value","func","onEnd","number"],"mappings":";;;;;;;wjDAAe,CACdA,WAAY,SAAUC,SACd,CACNC,SAAU,CACTC,OAAuBC,IAApBH,EAAWI,MAAsBC,EAAAA,EAAWL,EAAWI,KAC1DE,OAAsBH,IAAnBH,EAAWO,KAAqBF,EAAAA,EAAWL,EAAWO,KAE1DC,SAAU,CACTN,OAAwBC,IAArBH,EAAWS,MAAsBJ,EAAAA,EAAWL,EAAWS,MAC1DH,OAAyBH,IAAtBH,EAAWU,OAAuBL,EAAAA,EAAWL,EAAWU,UAI9DC,qBAAsB,SAAUC,EAAQC,SAChC,CACNZ,SAAU,CAACC,EAAGW,EAAOX,EAAIU,EAAQN,EAAGO,EAAOP,EAAIM,GAC/CJ,SAAU,CAACN,EAAGW,EAAOX,EAAIU,EAAQN,EAAGO,EAAOP,EAAIM,KAGjDE,cAAe,WAAkBC,OAAPb,IAAAA,EAAGI,IAAAA,MACvBS,EAAO,OAAO,MAEbd,EAAuBc,EAAvBd,SAAUO,EAAaO,EAAbP,gBAETN,GAAGD,EAASC,GAAKA,GAAKM,EAASN,GAAKI,GAAKL,EAASK,GAAKA,GAAKE,EAASF,GAE7EU,YAAa,SAAUC,EAAQC,cAC1BC,EAAcd,EAAAA,EACde,EAAe,YAEnBF,EAAOG,QAAS,SAAAC,OACXC,EAAWC,EAAKC,YAAaH,EAAOL,GAEpCM,EAAWJ,IACdA,EAAcI,EACdH,EAAeE,KAIVF,GAERK,qBAAaH,EAAOI,OACfC,OAAoBxB,IAAZmB,EAAMpB,EAAkBG,EAAAA,EAAWiB,EAAMpB,EAAjDyB,OAAmExB,IAAZmB,EAAMhB,EAAkBD,EAAAA,EAAWiB,EAAMhB,EAChGsB,OAAuBzB,IAAfuB,EAASxB,EAAkBG,EAAAA,EAAWqB,EAASxB,EAAvD0B,OAA4EzB,IAAfuB,EAASpB,EAAkBD,EAAAA,EAAWqB,EAASpB,KAC5GqB,IAAQtB,EAAAA,GAAYsB,IAAQtB,EAAAA,EAAW,OAAOA,EAAAA,MAC9CwB,EAAKF,IAAQtB,EAAAA,EAAW,EAAIyB,KAAKC,IAAIH,EAAMD,GAC3CK,EAAKL,IAAQtB,EAAAA,EAAW,EAAIyB,KAAKC,IAAIH,EAAMD,UAExCG,KAAKG,KAAMJ,EAAGA,EAAKG,EAAGA,IAE9BE,kBAAUZ,EAAOL,SACT,CACNf,EAAGoB,EAAMpB,EAAIe,EAAOf,EACpBI,EAAGgB,EAAMhB,EAAIW,EAAOX,KCnDvB,SAAS6B,EAAKC,EAAOC,eACHlC,IAAViC,EAAsBC,EAAeD,MCQDE,EAAUC,QDLvC,CACd1B,OAAQ,CACP2B,OAAQ,SAACC,OAASC,gEACjB,CAAEC,GAAIF,EAAQvC,EAAG0C,GAAIH,EAAQnC,EAAGuC,SAAU,EAAGH,OAAAA,EAAQI,KAAM,WAE5DC,QAAS,SAACN,EAASO,EAAWC,EAAOC,GAEpCD,EAAME,IAAMV,EAAQE,GAAKO,EAAOhD,GAAK8C,EACrCC,EAAMG,IAAMX,EAAQG,GAAKM,EAAO5C,GAAK0C,IAIvCK,OAAQ,CACPb,OAAQ,SAACC,OAASC,gEAAoB,CACrCI,KAAM,SACNO,OAAQlB,EAAIM,EAAQY,OAAQ,IAC5BpD,SAAUwC,EAAQa,UAAUrD,SAC5BO,SAAUiC,EAAQa,UAAU9C,SAC5BqC,SAAU,EACVH,OAAAA,IAEDK,QAAS,WAA+BC,EAAWC,IAAcM,OAAtDtD,IAAAA,SAAUO,IAAAA,SAAU6C,IAAAA,OAA4BnD,IAAAA,EAAEI,IAAAA,EAExDL,EAASC,EAAIA,GAAGqD,EAAOC,gBAAgBvD,EAASC,GAChDD,EAASK,EAAIA,GAAGiD,EAAOE,gBAAgBxD,EAASK,GAChDE,EAASN,EAAIA,GAAGqD,EAAOC,gBAAgBhD,EAASN,GAChDM,EAASF,EAAIA,GAAGiD,EAAOE,gBAAgBjD,EAASF,OAE9C6C,EAAWF,EAAXE,GAAIC,EAAOH,EAAPG,GAENnD,EAASC,EAAIA,GAAKiD,EAAK,IAC1BF,EAAME,IAAMA,EAAKE,GAEdpD,EAASK,EAAIA,GAAK8C,EAAK,IAC1BH,EAAMG,IAAKA,EAAKC,GAEb7C,EAASN,EAAIA,GAAKiD,EAAK,IAC1BF,EAAME,IAAMA,EAAKE,GAEd7C,EAASF,EAAIA,GAAK8C,EAAK,IAC1BH,EAAMG,IAAMA,EAAKC,KAKpBK,SAAU,CACTlB,OAAQ,SAAEC,OAASC,gEAAqB,CACvCI,KAAM,WACNa,QAASxB,EAAIM,EAAQkB,QAAS,IAC9BL,UAAWM,EAAM7D,WAAY0C,EAAQoB,eAAiB,IACtDhB,SAAU,EACVH,OAAAA,IAEDK,QAAS,SAACN,EAASO,EAAWC,EAAOC,MAC/BU,EAAM9C,cAAeoC,EAAQT,EAAQa,gBAEtCQ,EAAMhC,KAAKgC,IAAIrB,EAAQkB,QAAS,GAAOX,GAC3CC,EAAME,GAAKW,EAAMb,EAAME,GACvBF,EAAMG,GAAKU,EAAMb,EAAMG,MAIzBW,QAAS,CACRvB,OAAQ,SAAEC,OAASC,gEAAqB,CACvCI,KAAM,UACNH,GAAIR,EAAIM,EAAQvC,EAAGG,EAAAA,GACnBuC,GAAIT,EAAIM,EAAQnC,EAAGD,EAAAA,GACnB2D,SAAU7B,EAAIM,EAAQuB,SAAU,KAChCC,QAAS9B,EAAIM,EAAQwB,QAAS,IAC9BN,QAASxB,EAAIM,EAAQkB,QAAS,GAC9BL,UAAWM,EAAM7D,WAAW0C,EAAQoB,eAAiB,IACrDnB,OAAAA,EACAG,SAAU,IAEXE,QAAS,SAACN,EAASO,EAAWC,EAAOC,MAC/BU,EAAM9C,cAAeoC,EAAQT,EAAQa,gBAEtCzB,EAAKY,EAAQE,KAAOtC,EAAAA,EAAW6C,EAAOhD,EAAIuC,EAAQE,GAAK,EACvDX,EAAKS,EAAQG,KAAOvC,EAAAA,EAAW6C,EAAO5C,EAAImC,EAAQG,GAAK,EACvDsB,EAAKpC,KAAKG,KAAKJ,EAAKA,EAAKG,EAAKA,MAE7BkC,OAECD,EAAsBxB,EAAtBwB,QACFE,GADwB1B,EAAbuB,SACME,EAAKpC,KAAKsC,IAAYF,EAAKA,GAAZ,IAAmBD,EAAUA,IAAahB,EAAMoB,KAEhFC,EAAKzC,EAAKqC,EAAKC,EACfI,EAAKvC,EAAKkC,EAAKC,EAEnBlB,EAAME,IAAMH,EAAYsB,EACxBrB,EAAMG,IAAMJ,EAAYuB,MAI1BC,OAAQ,CACPhC,OAAQ,SAAEC,OAASC,gEAAqB,CACvCI,KAAM,SACNH,GAAIR,EAAIM,EAAQvC,EAAG,GACnB0C,GAAIT,EAAIM,EAAQnC,EAAG,GACnBmE,QAAStC,EAAIM,EAAQgC,QAAS,KAC9BnB,UAAWM,EAAM7D,WAAY0C,EAAQoB,eAAiB,IACtDnB,OAAAA,EACAG,SAAU,IAEXE,QAAS,SAAEN,EAASO,EAAWC,EAAOC,MAChCU,EAAM9C,cAAeoC,EAAQT,EAAQa,gBAEtCzB,EAAKqB,EAAOhD,EAAIuC,EAAQE,GACxB2B,GAAO,EAAI7B,EAAQgC,QAAU5C,EAAMoB,EAAMoB,KAEzCrC,EAAKkB,EAAO5C,EAAImC,EAAQG,GACxB2B,GAAO,EAAI9B,EAAQgC,QAAUzC,EAAMiB,EAAMoB,KAE7CpB,EAAME,GAAKF,EAAME,GAAKH,EAAYsB,EAClCrB,EAAMG,GAAKH,EAAMG,GAAKJ,EAAYuB,MEnH/BG,wBAUQC,EAAMC,EAAUC,mCATjB,2BACI,CAAC1B,GAAI,EAAGC,GAAI,EAAGiB,KAAM,6CACH,wBACpB,wBACA,uBACF,qBACF,wBACG,QAGPM,KAAOA,OACPG,iBAAmBF,GACnBC,EAAO,KACPE,EAAO,kBACNC,WAAaD,OACbE,SAAWF,6CAITG,cACHC,KAAKC,YAELD,KAAKE,kBACJC,0BACmC,MAAtCJ,EAAkBC,KAAKE,mBAIrBA,YAAcH,OACdJ,iBAAiBS,mBACtBC,sBAAuB,kBAAMhE,EAAKuB,QAAS0C,KAAKC,6CAGrCC,IACQ,IAAfR,KAAKN,OAAkBM,KAAKN,QAAUc,EAAS7C,YAC9C8C,OAASD,OACTE,+BAAoBV,KAAKW,oDAIzBX,KAAKS,SAA0B,IAAfT,KAAKN,OAAkBM,KAAKN,QAAUM,KAAKS,OAAO9C,MACvEiD,QAAQC,oBAAcb,KAAKS,OAAO9C,MAAQ,CACzCmD,IAAKd,KAAKW,cAAc3C,GAAKgC,KAAKU,cAAc1C,GAChD+C,IAAKf,KAAKW,cAAc1C,GAAK+B,KAAKU,cAAczC,uDAIvBJ,iBACrBA,OAEC8C,EAAmCX,KAAnCW,cAAeK,EAAoBhB,KAApBgB,UAAWxB,EAASQ,KAATR,KAC5ByB,GAAc,EACdlD,EAASyB,EAAK0B,iBAElBF,EAAU9E,QAAS,SAAAsE,GAClBW,EAAKtB,WAAYW,GACjBY,EAAWZ,EAAS7C,MAAOC,QAAS4C,EAAU3C,EAAW8C,EAAe5C,EAAQyB,GAChF2B,EAAKrB,iBAGFpD,EAAK,EACJsB,EAAS2C,EAAT3C,GAAGC,EAAM0C,EAAN1C,GAGHtB,KAAKC,IAAIoB,GAnEqB,IAoElCtB,EAAKmB,EAAYG,EACjBiD,GAAc,OAGXpE,EAAK,EACJF,KAAKC,IAAIqB,GAzEqB,IA0ElCpB,EAAKgB,EAAYI,EACjBgD,GAAc,GAIfzB,EAAK6B,QAAS3E,EAAIG,OAEdyE,EAAQL,EAAc,EAAIjB,KAAKuB,gCAAkC,OAChEA,gCAAkCD,EAEnCA,GArFoC,KAqFWtB,KAAKwB,kBAClDC,mBACA9B,iBAAiB+B,wDAIX/D,EAAML,EAASC,OACvBoE,EAAIP,EAAWzD,MACdgE,WAEDnB,EAAWmB,EAAEtE,OAAQC,EAASC,GAC9ByD,EAAYhB,KAAKgB,UACjBY,EAAM,EAEHZ,EAAUa,OAASD,GAAOZ,EAAUY,GAAKlE,UAAY8C,EAAS9C,YAClEkE,SAEHZ,EAAUc,OAAQF,EAAK,EAAGpB,QAErBuB,gBACEvB,kCAGAwB,WACHhB,EAAYhB,KAAKgB,UACjBiB,EAAIjB,EAAUa,OACXI,KAAM,GACRD,EAAUhB,EAAUiB,KACvBjB,EAAUc,OAAQG,EAAG,0CAKRzB,QACV0B,OAAQ,SAAA9D,UAAUA,IAAWoC,gDAGd7C,QACfuE,OAAQ,SAAA9D,UAAUA,EAAOT,OAASA,uDAIlCuE,OAAQ,SAAA9D,UAAUA,EAAOb,qDAIvB,CAAExC,EAAGiF,KAAKW,cAAc3C,GAAI7C,EAAG6E,KAAKW,cAAc1C,iDAIpDgC,WAAaD,KAAKmC,sEAIlBlC,WAAY,OACZC,YAAc,OACdqB,gCAAkC,EACvClB,sBAAuB,kBAAM+B,EAAKxE,QAAS0C,KAAKC,oDAI3C8B,2BACA1B,cAAgB,CAAC3C,GAAI,EAAGC,GAAI,EAAGiB,KAAMc,KAAKW,cAAczB,WACxDe,WAAY,WDjJbqC,EAAgB,CACrBC,cAAe,WACfC,cAAe,UACfC,aAAc,iBEFftF,EAASqC,KCHM,SAAsBkD,OAC/BC,EAAQD,EAAMC,uBAAYD,EAAMC,OAAS,UACxCA,EAAMC,UACTD,EAAMC,QAAU,gBAIhBC,gBAAC1F,EAAS2F,SAAQJ,GAAOC,MAAOA,IAC7BD,EAAMK,WDFE,CAACvD,MFE4BrC,EEHLA,EFGeC,EEHLA,6BF6CnCsF,mDACLA,qFAJc,2BACR,SAKOA,EAAMM,oBAAnBjI,EAAAA,aAAE,QAAGI,EAAAA,aAAE,MAGR8H,SAAW,IAAI9F,EAAS+F,QAAQ,CAACnI,EAAAA,EAAGI,EAAAA,MAGpCgI,SAAW9G,EAAK+G,eAAgBV,KAGhCW,iBAAmB,KAGnBC,UAAY,CAChBC,MAAO,GACP1I,YAAY,KAGR2I,IAAMnH,EAAKoH,mBAAmBf,KAG9BgB,kBAAmB,GAAIhB,OAGxBO,EAAY5G,EAAKsH,YAAajB,UAClCO,EAASlI,EAAE6I,SAAU7I,GACrBkI,EAAS9H,EAAEyI,SAASzI,GACpB8H,EAASlI,EAAE8I,eAAiB9I,EAC5BkI,EAAS9H,EAAE0I,eAAiB1I,IAGvB2I,yBAAczH,EAAK2G,+PAzEYe,uDA6ErB/D,KAAK2D,cAEhBK,EAAW,CACdC,UAAW,CACV,CAAEC,aAJEnJ,GAIe,CAAEoJ,aAJdhJ,KAQLiJ,EAAcpE,KAAK0C,MAAM2B,YAAcrE,KAAKwD,IAAIY,YAAc,UAGjEvB,gBAAC1F,EAASqC,QAAKmD,MAAOqB,GAAcI,GAClCpE,KAAK0C,MAAMK,yDAMD/C,KAAK2D,cAAb5I,IAAAA,EAAGI,IAAAA,QACD,CACNJ,EAAGA,EAAEuJ,OAASvJ,EAAEwJ,QAChBpJ,EAAGA,EAAEmJ,OAASnJ,EAAEoJ,iDAIDC,OACZvB,EAAWjD,KAAK0C,MAAM+B,gBAAkBzE,KAAKiD,SAASlI,EAC1DkI,EAASW,SAAUY,EAAKvB,EAASsB,iDAGlBG,OACXzB,EAAWjD,KAAK0C,MAAMiC,gBAAkB3E,KAAKiD,SAAS9H,EAC1D8H,EAASW,SAAUc,EAAKzB,EAASsB,gDAGlBC,EAAIE,QACdrG,gBAAiBmG,QACjBlG,gBAAiBoG,8DAIf,IAAIE,EAAU5E,KAAM,CAC1B0B,gBAAiB,iBACDP,EAAKD,iBAAdnG,IAAAA,EAAGI,IAAAA,EACTgG,EAAK2C,QAAU,CAAC/I,EAAG4B,KAAKkI,MAAM9J,GAAII,EAAGwB,KAAKkI,MAAM1J,IAChDgG,EAAKuB,MAAMoC,OAAQ3D,EAAK2C,UAEzB1D,iBAAkB,WACjBe,EAAK4D,iBAAkB5D,EAAKD,qBAG9B,mCAIQxE,EAAIG,MACRH,GAAOG,SAIEmD,KAAKkB,iBAAbnG,IAAAA,EAAEI,IAAAA,OACF6J,eAAgBjK,EAAI2B,EAAIvB,EAAI0B,wCAGrB6F,SAC8BA,GAAS1C,KAAK0C,MAAlD+B,IAAAA,eAAgBE,IAAAA,qBAEf,CACN5J,EAAG0J,GAAkBzE,KAAKiD,SAASlI,EACnCI,EAAGwJ,GAAkB3E,KAAKiD,SAAS9H,kEAK7BiC,EAAaC,OAAO,CAC1B4H,gCAAiC,kBAAM,GACvCC,mCAAoC,kBAAM,GAE1CC,oBAAqB,SAACC,SAAI5H,IAAAA,GAAIC,IAAAA,GAC7B2E,EAAKiD,UAAW,CAACtK,EAAGyC,EAAIrC,EAAGsC,KAG5B6H,mBAAoB,SAACC,EAAKC,GACzBpD,EAAKqD,WAAYD,IAGlBE,sBAAuB,WACtBtD,EAAKuD,sDAKU3B,OACb4B,EAAS5F,KAAKqD,iBACZwC,EAAY7F,KAAK0C,MAAjBmD,aAEDvC,UAAUC,MAAMrH,QAAS,gBAAGiC,IAAAA,UAAW2H,IAAAA,GACrC3H,GAAc2H,IAEfrH,EAAM9C,cAAeqI,EAAU7F,GAC7ByH,EAAOE,KACZD,EAAQ,CAACC,GAAAA,EAAI7I,MAAM,UACnB2I,EAAOE,GAAM,GAEJF,EAAOE,KACjBD,EAAQ,CAAEC,GAAAA,EAAI7I,MAAO,UACrB2I,EAAOE,GAAM,wCAKLC,SAEE/F,KAAK2D,cAAZ5I,IAAAA,EAAEI,IAAAA,EACH6K,EAAS,CAACjL,EAAGA,EAAEuJ,OAAQnJ,EAAGA,EAAEmJ,WAChCvJ,EAAEkL,UAAWD,EAAOjL,GACpBI,EAAE8K,UAAWD,EAAO7K,GACpBJ,EAAE6I,SAAU,GACZzI,EAAEyI,SAAU,QAGPE,QAAUkC,OAIVE,eAAiBlG,KAAKsD,UAAUzI,WAAamF,KAAKsD,UAAUzI,WAAWsD,UAAY,QAGnFuE,MAAMyD,OAAO,CAACrI,MAAO,QAAS/C,EAAGiL,EAAOjL,EAAGI,EAAG6K,EAAO7K,SACrDiL,kBAAoB,CAAErL,EAAGgL,EAAGhL,EAAGI,EAAG4K,EAAG5K,QACrCgI,SAASd,2BACTc,SAAS3B,YAAa,OACtB2B,SAASnF,GAAK,OACdmF,SAASlF,GAAK,OACdoI,oBAAqBrG,KAAK0C,MAAM4D,gBAGjCC,SAAU,KACTC,EAASD,SAASE,KAAK9D,WACtB+D,gBAAkBF,EAAOG,WAC9BH,EAAOG,WAAa,kDAIVjK,IAAAA,GAAIG,IAAAA,OACVmD,KAAKmD,SAAS3B,WAAa,OAAO,MAClCxB,KAAK0C,MAAM2B,YAAc,OAAOrE,KAAK2F,cAEtCiB,EAAM5G,KAAK8D,QACX/I,EAAI2B,EAAKkK,EAAI7L,EACbI,EAAI0B,EAAK+J,EAAIzL,IAIU6E,KAAKkG,eAA3BpL,IAAAA,SAAUO,IAAAA,SACV2E,KAAK0C,MAAMmE,eACX/L,IACCA,EAASC,EAAIA,IAAGA,EAAID,EAASC,GAC7BM,EAASN,EAAIA,IAAGA,EAAIM,EAASN,SAE7B+L,aAAatJ,GAAKzC,GAGnBiF,KAAK0C,MAAMqE,iBACXjM,IACCA,EAASK,EAAIA,IAAGA,EAAIL,EAASK,GAC7BE,EAASF,EAAIA,IAAGA,EAAIE,EAASF,SAE7B2L,aAAarJ,GAAKtC,0CAOnBgI,SAASd,2BACTyE,aAAe,UACf3D,SAAS3B,YAAa,MAErB2B,EAA4DnD,KAA5DmD,SAAU4D,EAAkD/G,KAAlD+G,eAAgBF,EAAkC7G,KAAlC6G,aAAcG,EAAoBhH,KAApBgH,gBAE1CC,EAAW9D,EAAS+D,cACpBH,IAAgBE,EAAS9L,EAAI,GAC7B0L,IAAcI,EAASlM,EAAI,OAE3BoM,EAAQH,GAAmBA,EAAgBG,MAASnH,KAAK0C,MAAM0E,WACvDpH,KAAKkB,iBAAZnG,IAAAA,EAAEI,IAAAA,EACHkM,EAAkB,CACrBtM,EAAGA,EAAIoM,EAAOF,EAASlM,EACvBI,EAAGA,EAAIgM,EAAOF,EAAS9L,GAIpBmM,EAAY7I,EAAM5C,YAAYwL,EAAiBrH,KAAK0C,MAAM6E,YAC1DC,EAAqBF,GAAaA,EAAUxB,IAAO,QAElDpD,MAAMyD,OAAO,CAAErI,MAAO,MAAO/C,EAAGA,EAAGI,EAAGA,EAAGqM,kBAAAA,SAEzCC,2BAA2BH,QAC3BI,wBAEDzE,EAAWjD,KAAK2D,cACpBV,EAASlI,EAAE4M,gBACX1E,EAAS9H,EAAEwM,gBAGPpB,WACHA,SAASE,KAAKE,WAAa3G,KAAK0G,iBAAmB,gDAIhCkB,OAChBhB,EAAM5G,KAAKkB,iBAET0G,GAAQA,EAAKtI,UAAYpE,EAAAA,GAI9B0L,EAAItH,QAAUsI,EAAKtI,SAAW,SACzBwH,aAAe9G,KAAKmD,SAAS0E,YAAa,SAAUjB,GAAK,GAC1DgB,EAAKpJ,cACH2E,SAAS0E,YAAY,WAAYD,GAAM,SANxCd,aAAe9G,KAAKmD,SAAS0E,YAAa,SAAUjB,GAAK,sDAWpCU,MACtBA,SACqCtH,KAAK0C,MAAzC6E,IAAAA,WAAYO,IAAAA,OAAQC,IAAAA,YAEtBC,EAAQT,EAAWU,QAAQX,GAE/BQ,EAAO,CAACE,MAAAA,EAAOlC,GAAIwB,EAAUxB,KAC7BiC,EAAY,CAACC,MAAAA,EAAOlC,GAAIwB,EAAUxB,SAE9BoC,iBACH1J,QAAS,GACTc,QAAS,KACNgI,QAGCO,YAAa,SAAUK,GAAe,wCAG/BjB,GACPjH,KAAK8G,oBACL3D,SAASxC,cAAc3C,GAAKiJ,EAASlM,OACrCoI,SAASxC,cAAc1C,GAAKgJ,EAAS9L,OACrCwK,iDAGGqC,IAAAA,MACHT,EAAcvH,KAAK0C,MAAnB6E,cAEAA,QAAwBvM,IAAVgN,KAAuBA,GAAST,EAAW1F,cAEzDsB,SAASd,2BACTyE,aAAe,SAChBQ,EAAYC,EAAWS,QAEtBP,2BAA2BH,QAC3BI,qEAID7M,EAAamF,KAAKsD,UAAUzI,WAC3BA,QACAsI,SAAS0E,YAAa,SAAUhN,GAAY,0CAGlCmJ,GACVhE,KAAK8G,oBAEL9B,eAAgBhB,EAASjJ,EAAGiJ,EAAS7I,QACrCwK,sDAGcwC,QACdzE,kBAAmByE,EAAWnI,KAAK0C,iDAGtByF,EAAWzF,iBAE7B0F,OAAOC,KAAM/F,GAAgBpG,QAAS,SAAAoM,GACjCH,EAAWG,KAAW5F,EAAO4F,KAChCC,EAAKpF,SAASqF,oBAAoBlG,EAAcgG,IAChDC,EAAKE,iBAAkBnG,EAAcgG,GAAO5F,EAAO4F,OAIjDH,EAAUO,aAAehG,EAAMgG,WAAY,KAC1CA,EAAa,GACjBhG,EAAMgG,WAAWxM,QAAS,SAAAN,GACzB8M,EAAWC,KAAK,CACf7C,GAAIlK,EAAKkK,GACT3H,UAAWM,EAAM7D,WAAYgB,EAAK8C,wBAG/B4E,UAAUC,MAAQmF,KAGpBP,EAAUtN,aAAe6H,EAAM7H,mBAC7BsI,SAASyF,eAAgB5I,KAAK6I,uBAC/BnG,EAAM7H,WAAY,KACjBqD,EAAS,CACZA,OAAQwE,EAAM7H,WAAWqD,QAAU,EACnCC,UAAWM,EAAM7D,WAAY8H,EAAM7H,kBAE/ByI,UAAUzI,WAAaqD,OACvB2K,sBAAwB7I,KAAKmD,SAAS0E,YAAa,SAAU3J,aAG7DoF,UAAUzI,YAAa,GAIzBmF,KAAK0C,MAAM2B,aAAe8D,EAAU9D,aAAerE,KAAK8G,mBACvDnB,mDAIWhI,EAAMqD,EAAWzD,cAClCyD,EAAU9E,QAAS,SAAAyF,UAAKmH,EAAKjB,YAAalK,EAAMgE,EAAGpE,yCAGvCI,EAAM6C,EAAUjD,WACvB4F,SAAS0E,YAAalK,EAAM6C,EAAUjD,GACvCiD,EAAShC,SAAoB,aAATb,EAAqB,KACxCgE,EAAI3B,KAAKmD,SAAS0E,YAAY,WAAYrH,EAAUjD,GAC3C,YAATI,GAAuB6C,EAAS9B,gBACnCiD,EAAExD,UAAYM,EAAMjD,qBAAqB,KAAOgF,EAAS1B,SAAW,IAAK0B,8BAtZzD,CAClB+G,WAAYwB,EAAUC,MACtBzG,cAAewG,EAAUC,MACzBN,WAAYK,EAAUC,MACtBxG,cAAeuG,EAAUC,MACzBjC,eAAgBgC,EAAUE,KAC1BpC,aAAckC,EAAUE,KACxB3C,eAAgByC,EAAUG,OAC1B7E,YAAa0E,EAAUE,KACvBxE,eAAgBsE,EAAUI,WAAWhM,EAASiM,OAC9CzE,eAAgBoE,EAAUI,WAAWhM,EAASiM,OAC9CtB,OAAQiB,EAAUM,KAClBtB,YAAagB,EAAUM,KACvBC,MAAOP,EAAUM,KACjBlD,OAAQ4C,EAAUM,KAClBxO,WAAYkO,EAAUG,OACtBlG,gBAAiB+F,EAAUG,OAC3B9B,SAAU2B,EAAUQ,4BAGC,CACrBhC,WAAY,GACZhF,cAAe,GACfmG,WAAY,GACZlG,cAAe,GACf3H,WAAY,GACZmI,gBAAiB,CAACjI,EAAG,EAAGI,EAAG,GAC3BiM,SAAU,GACV/C,aAAa,EACbyD,OAAQ,aACRC,YAAa,aACbjD,OAAQ,aACRqB,OAAQ,aACRN,QAAS"}